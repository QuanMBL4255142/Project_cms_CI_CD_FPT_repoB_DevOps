apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-app
  namespace: argocd-new
  labels:
    app: django-app
    version: v1.0.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: django-app
  template:
    metadata:
      labels:
        app: django-app
        version: v1.0.0
    spec:
      containers:
      - name: django
        image: ghcr.io/quanmbl4255142/project_cms_ci_cd_fpt_repoa_backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: django-secret
              key: SECRET_KEY
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: django-config
              key: DEBUG
        - name: ALLOWED_HOSTS
          valueFrom:
            configMapKeyRef:
              name: django-config
              key: ALLOWED_HOSTS
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: django-config
              key: DATABASE_URL
        - name: STATIC_ROOT
          valueFrom:
            configMapKeyRef:
              name: django-config
              key: STATIC_ROOT
        - name: DJANGO_SETTINGS_MODULE
          value: "product_api.settings"
        command: ["sh", "-c"]
        args:
        - |
          echo "Starting Django application..."
          python manage.py migrate --noinput
          python manage.py collectstatic --noinput
          echo "Starting Gunicorn server..."
          gunicorn product_api.wsgi:application \
            --bind 0.0.0.0:8000 \
            --workers 2 \
            --worker-class gthread \
            --threads 2 \
            --timeout 30 \
            --keep-alive 2 \
            --max-requests 1000 \
            --max-requests-jitter 100
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /api/products/
            port: 8000
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /api/products/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/products/
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 12
---
apiVersion: v1
kind: Service
metadata:
  name: django-service
  namespace: argocd-new
spec:
  selector:
    app: django-app
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP
